version: "3.3"

services:
  redis:
    container_name: redis
    build: ./redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis-data:/data
    environment:
      - REDIS_PASSWORD=redis
    healthcheck:
      test: exit 0

  channel-db:
    container_name: channel-db
    build: ./channel-db
    ports:
      - "5432:5432"
    volumes:
      - ./channel-db/pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: exit 0

  message-db:
    container_name: message-db
    build: ./message-db
    ports:
      - "27017:27017"
    volumes:
      - ./message-db/mongo-data:/data/db
    environment:
      - MONGO_USERNAME=mongo
      - MONGO_PASSWORD=mongo
    healthcheck:
      test: exit 0

  channel-service:
    container_name: channel-service
    hostname: channel-service
    build: ./channel-service
    ports:
      - "3001:3000"
    volumes:
      - "./channel-service:/usr/src/app"
      - "./channel-service/package.json:/usr/src/package.json"
    environment:
      - NODE_ENV=development
      - SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe
      - DATABASE_URL=postgres://postgres:postgres@channel-db:5432/app
      - DATABASE_TEST_URL=postgres://postgres:postgres@channel-db:5432/app_test
      - REDIS_URL=redis://:redis@redis:6379/0
      - SMTP_URL=smtp://test@test:587/?pool=true
    depends_on:
      - channel-db
      - redis
    links:
      - channel-db
      - redis      

  xmpp-service:
    container_name: xmpp-service
    hostname: xmpp-service
    build: ./xmpp-service
    ports:
      - "4000:4000"
    volumes:
      - "./xmpp-service:/usr/src/app"
      - "./xmpp-service/package.json:/usr/src/package.json"
    environment:
      - NODE_ENV=development
      - SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe
      - DATABASE_URL=mongo://mongo:mongo@message-db:27017/message
      - DATABASE_TEST_URL=mongo://mongo:mongo@message-db:27017/message_test
      - REDIS_URL=redis://:redis@redis:6379/0
    depends_on:
      - message-db
      - redis
    links:
      - message-db
      - redis

  file-service:
    container_name: file-service
    hostname: file-service
    build: ./file-service
    ports:
      - "5000:5000"
    volumes:
      - "./file-service:/usr/src/app"
      - "./file-service/requirements.txt:/usr/src/requirements.txt"
    environment:
      - PYTHON_ENV=development
      - SECRET=\x02\xf3\xf7r\t\x9f\xee\xbbu\xb1\xe1\x90\xfe

  proxy:
    container_name: proxy
    hostname: proxy
    build: ./proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./proxy/proxy.conf:/etc/nginx/service.conf"
      - "./file-service/src/static:/files"
      - "./proxy/ssl:/etc/nginx/ssl"
    environment:
      - TZ=UTC
      - LETSENCRYPT=${SSL_ON:-false}
      - LE_FQDN=${NGINX_HOST:-localhost}
      - LE_EMAIL=${SSL_EMAIL}
    depends_on:
      - channel-service
      - xmpp-service
      - file-service
    restart: always
    healthcheck:
      test: exit 0