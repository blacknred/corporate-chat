version: "3.3"

services:
  redis:
    container_name: redis
    build: ./redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis-data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    healthcheck:
      test: exit 0

  channel-db:
    container_name: channel-db
    build: ./channel-db
    ports:
      - "5432:5432"
    volumes:
      - ./channel-db/pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: exit 0

  message-db:
    container_name: message-db
    build: ./message-db
    ports:
      - "27017:27017"
    volumes:
      - ./message-db/mongo-data:/data/db
    environment:
      - MONGO_USER=${MONGODB_USER}
      - MONGO_PASSWORD=${MONGODB_PASSWORD}
    healthcheck:
      test: exit 0

  channel-service:
    container_name: channel-service
    build: ./channel-service
    ports:
      - "3001:3000"
    volumes:
      - "./channel-service:/usr/src/app"
      - "./channel-service/package.json:/usr/src/package.json"
    environment:
      - NODE_ENV=${NODE_ENV}
      - SECRET=${SECRET}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@channel-db:5432/app
      - DATABASE_TEST_URL=postgres://${POSTGRES_USER}:{POSTGRES_PASSWORD}@channel-db:5432/app_test
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - SMTP_URL=${SMTP_URL}
    depends_on:
      - channel-db
      - redis
    links:
      - channel-db
      - redis

  xmpp-service:
    container_name: xmpp-service
    build: ./xmpp-service
    ports:
      - "3003:3000"
    volumes:
      - "./xmpp-service:/usr/src/app"
      - "./xmpp-service/package.json:/usr/src/package.json"
    environment:
      - NODE_ENV=${NODE_ENV}
      - SECRET=${SECRET}
      - DATABASE_URL=mongo://${MONGODB_USER}:${MONGODB_PASSWORD}@message-db:27017/message
      - DATABASE_TEST_URL=mongo://${MONGODB_USER}:${MONGODB_PASSWORD}@message-db:27017/message_test
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - message-db
      - redis
    links:
      - message-db
      - redis

  file-service:
    container_name: file-service
    build: ./file-service
    ports:
      - "3002:5000"
    volumes:
      - "./file-service:/usr/src/app"
      - "./file-service/requirements.txt:/usr/src/requirements.txt"
    environment:
      - SECRET=${SECRET}

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - "./nginx/app.prod.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./file-service/app/static:/files"
      - "./certbot/conf:/etc/letsencrypt"
      - "./certbot/www:/var/www/certbot"
    depends_on:
      - channel-service
      - xmpp-service
      - file-service
    restart: always
    healthcheck:
      test: exit 0
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx \
      -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    build: ./certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    healthcheck:
      test: exit 0
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; \
      do certbot renew; sleep 12h & wait $${!}; done;'"
